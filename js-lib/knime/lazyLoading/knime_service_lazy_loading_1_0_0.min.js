initLazyLoading=function(){function a(g,h){this.progressListeners=[],this.monitor={},this.realPromise=h?h:new Promise(g)}async function b(g,h){try{let k;k=knimeService.isInteractivityAvailable()?knimeService.getGlobalService().requestViewUpdate(window.frameElement.id,JSON.stringify(g),g.sequence):knimeViewRequest(JSON.stringify(g)),k||(k={}),'string'==typeof k&&(k=JSON.parse(k)),k.requestSequence||(k.requestSequence=g.sequence),h.monitor=k,h.promise&&h.promise.updateProgress(k),'undefined'==typeof f&&initPushSupported(),f||initUpdateMonitorPolling(h)}catch(k){for(let l=0;l<c.length;l++)if(c[l].requestSequence===g.sequence){c.splice(l,1);break}h.reject&&h.reject(k)}}var f,c=[],d=0;if(!knimeService)throw new Error('KNIME service is not defined.');a.prototype={progress:function(g){return this.progressListeners.push(g),this.monitor&&g(this.monitor),this},then:function(g,h){let k=new a(null,this.realPromise.then(g,h));return k.progressListeners=this.progressListeners,k.monitor=this.monitor,k},catch:function(g){let h=new a(null,this.realPromise.catch(g));return h.progressListeners=this.progressListeners,h.monitor=this.monitor,h},finally:function(g){let h=new a(null,this.realPromise.finally(g));return h.progressListeners=this.progressListeners,h.monitor=this.monitor,h},updateProgress:function(g){this.monitor=g,this.progressListeners.forEach(function(h){h(g)})},cancel:function(g){if(this.monitor&&this.monitor.requestSequence)for(let k,h=0;h<c.length;h++)if(k=c[h],k.sequence==this.monitor.requestSequence){if(!k.notCancelable){let l=k.sequence;k.monitor&&k.monitor.id&&(l=k.monitor.id),l=''+l,knimeService.isInteractivityAvailable()?monitor=knimeService.getGlobalService().cancelViewRequest(window.frameElement.id,l,g):knimeCancelRequest(l),g||c.splice(h,1)}break}}},getNextRequestSequence=function(g){let h='undefined'==typeof Number.MAX_SAFE_INTEGER?Number.MAX_VALUE:Number.MAX_SAFE_INTEGER;return++g%h},getPreviousRequestSequence=function(g){let h='undefined'==typeof Number.MAX_SAFE_INTEGER?Number.MAX_VALUE:Number.MAX_SAFE_INTEGER;return--g%h},getAndSetNextRequestSequence=function(){return d=getNextRequestSequence(d),d},initPushSupported=function(){f=knimeService.isInteractivityAvailable()?knimeService.getGlobalService().isPushSupported():knimePushSupported()},knimeService.requestViewUpdate=function(g,h,k){g.sequence=getAndSetNextRequestSequence();let m={sequence:g.sequence,monitor:{},notCancelable:k,preserveOrder:h},n=new a(function(o,p){m.resolve=o,m.reject=p});return m.promise=n,c.push(m),b(g,m),n},initUpdateMonitorPolling=function(g){setTimeout(pollMonitorUpdate,500,g,500)},pollMonitorUpdate=function(g,h){let k,l=g.monitor.id;if(k=knimeService.isInteractivityAvailable()?knimeService.getGlobalService().updateRequestStatus(window.frameElement.id,l):knimeUpdateRequestStatus(l),'string'==typeof k&&(k=JSON.parse(k)),compareResponseMonitor(g.monitor,k)||knimeService.updateResponseMonitor(k),!(k.executionFinished&&k.responseAvailable||k.executionFailed||k.cancelled)){let m=Math.min(5e3,1.05*h);setTimeout(pollMonitorUpdate,m,g,m)}},compareResponseMonitor=function(g,h){return JSON.stringify(g)===JSON.stringify(h)},knimeService.updateResponseMonitor=function(g){let h=g.requestSequence;if('undefined'!=typeof h){g.executionFinished&&g.responseAvailable&&knimeService.respondToViewRequest(g.response);for(let l,k=0;k<c.length;k++)if(l=c[k],l.sequence===h){g.executionFailed||g.cancelled?(l.reject(g.errorMessage),c.splice(k,1)):(l.monitor=g,l.promise&&l.promise.updateProgress(g));break}}},knimeService.respondToViewRequest=function(g){let h=g.sequence;if('undefined'!=typeof h)for(var k=0;k<c.length;k++){let l=c[k];if(l.sequence===h){if(l.preserveOrder){l.response=g;for(let m=0;m<c.length&&'undefined'!=typeof c[m].response;m++)resolveResponse(m,c[m].response),m--}else resolveResponse(k,g);break}}},resolveResponse=function(g,h){let k=c[g];if(k.sequence===h.sequence){c.splice(g,1);try{k.resolve(h)}catch(l){k.reject(l)}}}}(),'undefined'==typeof KnimeInteractivity&&(KnimeInteractivity={respondToViewRequest:function(a){return knimeService.respondToViewRequest(a)},updateResponseMonitor:function(a){return knimeService.updateResponseMonitor(a)}});